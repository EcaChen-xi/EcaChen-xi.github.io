[{"title":"Github + Hexo建立个人博客","url":"/2021/04/18/hexo-0/","content":"<hr>\n<p>​    通过Github+Hexo也是第一次建立了自己的博客，建立过程遇错极其痛苦，为此拿第一篇blog练手既记录建立过程也试试markdown。</p>\n<hr>\n<p>[TOC]</p>\n<h1 id=\"搭建步骤：\"><a href=\"#搭建步骤：\" class=\"headerlink\" title=\"搭建步骤：\"></a>搭建步骤：</h1><h2 id=\"Github建立个人仓库：\"><a href=\"#Github建立个人仓库：\" class=\"headerlink\" title=\"Github建立个人仓库：\"></a>Github建立个人仓库：</h2><p>在自己的github账号中建立一个仓库。</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\hexo1.jpg\"></p>\n<p>在Repository name一栏填上username.github.io(其中username就是GitHub名称)。</p>\n<p>点下Create repository。</p>\n<h2 id=\"安装git、Node-js以及git绑定github\"><a href=\"#安装git、Node-js以及git绑定github\" class=\"headerlink\" title=\"安装git、Node.js以及git绑定github\"></a>安装git、Node.js以及git绑定github</h2><h3 id=\"安装过程：\"><a href=\"#安装过程：\" class=\"headerlink\" title=\"安装过程：\"></a>安装过程：</h3><p>下载链接如下（安装过程直接next就行）：</p>\n<p><a href=\"https://git-scm.com/download/win\">git安装链接</a></p>\n<p><a href=\"https://nodejs.org/en/download/\">Node.js安装链接</a></p>\n<p>Node.js安装后输入</p>\n<p><code>node -v</code></p>\n<p><code>npm -v</code></p>\n<p>出现版本号即可</p>\n<p>**attention:**我自己在安装过程中把path搞裂开了，导致cmd不能用（powershell还是能用的 ，所以powershell相对于cmd还是更power点（逃））。所以建议安装前先备份下path。</p>\n<h3 id=\"绑定过程：\"><a href=\"#绑定过程：\" class=\"headerlink\" title=\"绑定过程：\"></a>绑定过程：</h3><p>桌面右键单击点击git bash here。</p>\n<p>在git bash中设置user.name和user.email配置信息</p>\n<p><code>                git config --global user.name  &quot;你的GitHub用户名&quot;</code>    </p>\n<p><code>git config --global user.email “你的GitHub注册邮箱”</code></p>\n<p>生成ssh密钥文件：</p>\n<p><code>ssh-keygen -t rsa -C “你的GitHub注册邮箱”</code></p>\n<p>然后直接三个回车即可，默认不需要设置密码。</p>\n<p>然后在C:\\Users\\lenovo.ssh中找到id_rsa.pub密钥</p>\n<p>复制其中的内容</p>\n<p>打开GitHub账户下的setting 找到SSH and GPG keys</p>\n<p>点击new ssh key</p>\n<p>名字任意输出（我的是blog</p>\n<p>将刚才复制好的ssh粘贴到下面 点击add ssh key</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\ssh.jpg\" alt=\"ssh\"></p>\n<p>在git bash中检github公钥设置是否成功，输入</p>\n<p><code>ssh git@github.com</code></p>\n<p>出现以下结果则为成功设置</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\ssh_success.jpg\" alt=\"success\"></p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>在某个硬盘中开一个文件夹，随意命名（建议不要C盘），之后的Hexo框架和你自己发布的网页都在该文件夹中。创建好后，在文件夹中右键点击Git Bash Here。</p>\n<p>输入：</p>\n<p><code>npm install -g hexo-cli</code></p>\n<p>这个安装时间较长，安装完成后，初始化博客。输入：</p>\n<p><code>hexo init</code></p>\n<p>然后按顺序输入两条命令：</p>\n<p><code>hexo g</code></p>\n<p><code>hexo s</code></p>\n<p>完成后 打开网页输入地址：</p>\n<p><code>localhost:4000</code></p>\n<p>就能看到初始化的博客了</p>\n<h2 id=\"关联Hexo和GitHub\"><a href=\"#关联Hexo和GitHub\" class=\"headerlink\" title=\"关联Hexo和GitHub\"></a>关联Hexo和GitHub</h2><p>打开根目录下的站点配置文件_config.yml，在最后修改为以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">type: git</span><br><span class=\"line\">repo: url .git</span><br><span class=\"line\">branch: master</span><br></pre></td></tr></table></figure>\n\n<p>其中url为github的url，也就是自己建立项目的那个为网址。</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\deploy.jpg\" alt=\"deploy\"></p>\n<p>保存</p>\n<p>还是在自己建立博客的文件夹中打开git bash</p>\n<p>输入以下三条命令（这三条命令算得上一个整体，以后更新都得这么干,称之为老三样）：</p>\n<p><code>hexo clean</code></p>\n<p><code>hexo g</code></p>\n<p><code>hexo </code></p>\n<p>随后在网址上输入user.name.github.io 则可以看到自己的博客上线了 可以在网络被访问了</p>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><p>这一步可要可不要，主要是现在github偶尔会被墙掉</p>\n<p>在各大域名网站上找个免费域名或者买个域名，进入域名的控制系统，接下来以我的为例：</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\DNS.jpg\" alt=\"DNS\"></p>\n<p>可以看到</p>\n<p>类型设为CNAME 名称设为@（因为不想取名了） 内容则为原github创建好的博客 把状态改成仅限DNS TTL改为两分钟。</p>\n<p>保存好后，在GitHub自己的项目中找到setting，左侧栏找到Pages，将自己取名的网站复制到Custom domain中，save即可（这里报错没有关系）</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\github_page.jpg\" alt=\"aba\"></p>\n<h2 id=\"个性化博客\"><a href=\"#个性化博客\" class=\"headerlink\" title=\"个性化博客\"></a>个性化博客</h2><h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p>因为初始化博客的样式并不好看，所以我们可以换个主题。</p>\n<p>这里我用的是Next。</p>\n<p>Next的最新版本不稳定，在摸索过程中老是出错，所以推荐我用的版本的Next</p>\n<p>我们这里直接克隆github的项目(还是在文件夹中的git bash操作)：</p>\n<p><code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></p>\n<p>克隆完后打开根目录下的站点配置文件_config.yml，找到theme字段，将其值改为next，如下：</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\theme.jpg\" alt=\"theme\"></p>\n<p>打开主题的配置文件_config.yml，找到Scheme Settings，next主题有四个样式，我自己用的是Gemini，看个人喜好设置。</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\schemes.jpg\" alt=\"scheme\"></p>\n<p>更改完之后我们进行老三样：</p>\n<p><code>hexo clean</code></p>\n<p><code>hexo g</code></p>\n<p><code>heox s</code></p>\n<p>重新进行本地浏览，观察效果。</p>\n<h4 id=\"配置站点信息\"><a href=\"#配置站点信息\" class=\"headerlink\" title=\"配置站点信息\"></a>配置站点信息</h4><p>打开根目录下站点配置文件_config.yml，设置如下内容：</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\information.jpg\" alt=\"information\"></p>\n<p>参数说明：</p>\n<ul>\n<li>title：网站标题</li>\n<li>subtitle：网站副标题</li>\n<li>description：网站描述</li>\n<li>keywords：关键字</li>\n<li>author：作者</li>\n<li>language：zh-CN(中文不解释)</li>\n<li>timezone：网站时区。Hexo 默认使用您电脑的时区</li>\n</ul>\n<h3 id=\"更改博客背景\"><a href=\"#更改博客背景\" class=\"headerlink\" title=\"更改博客背景\"></a>更改博客背景</h3><p>打开theme中的next文件夹，找到source，进入images，先把背景图片放入。</p>\n<p>放入后在source文件夹中找到css，进入点击main.styl文件，在最后加上以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#96;body &#123;</span><br><span class=\"line\">  background: url(&#x2F;images&#x2F;background.jpg);</span><br><span class=\"line\">  background-repeat: no-repeat;</span><br><span class=\"line\">  background-attachment: fixed;</span><br><span class=\"line\">  background-position: 50% 50%;</span><br><span class=\"line\">  background-size: cover</span><br><span class=\"line\">&#125;&#96;</span><br></pre></td></tr></table></figure>\n\n<p>其中把background中的文件名改成对应文件名即可。</p>\n<h3 id=\"调整透明度\"><a href=\"#调整透明度\" class=\"headerlink\" title=\"调整透明度\"></a>调整透明度</h3><h4 id=\"内容板块透明\"><a href=\"#内容板块透明\" class=\"headerlink\" title=\"内容板块透明\"></a>内容板块透明</h4><ol>\n<li>博客根目录 themes\\next\\source\\css_schemes\\Pisces_layout.styl 文件 .content-wrap 标签下 background: white修改为：<br><code>background: rgba(255,255,255,0.7); //0.7是透明度</code></li>\n<li>博客根目录 themes\\next\\source\\css_schemes\\Gemini\\index.styl文件 .post-block 标签下的 background: white修改为：<br><code>background: rgba(255,255,255,0.7); //0.7是透明度</code></li>\n</ol>\n<h4 id=\"菜单栏背景\"><a href=\"#菜单栏背景\" class=\"headerlink\" title=\"菜单栏背景\"></a>菜单栏背景</h4><ol>\n<li>博客根目录 themes\\next\\source\\css_schemes\\Pisces_layout.styl 文件 .header-inner 标签下 background: white修改为：<br><code>background: rgba(255,255,255,0.7); //0.7是透明度</code></li>\n<li>博客根目录 themes\\next\\source\\css_schemes\\Pisces_sidebar.styl 文件 .sidebar 标签下 增加一行:<br><code>opacity: 0.7; // 0.7透明度自己选择</code></li>\n</ol>\n<h3 id=\"添加作者头像\"><a href=\"#添加作者头像\" class=\"headerlink\" title=\"添加作者头像\"></a>添加作者头像</h3><p>跟设置背景图片操作一样，先存图。</p>\n<p>存图后找到主题配置文件_config.yml，找到如下代码，取消注释即可，同样也要记得把文件名改了</p>\n<p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\avatar.jpg\" alt=\"avatar\"></p>\n<h3 id=\"添加类或标签功能\"><a href=\"#添加类或标签功能\" class=\"headerlink\" title=\"添加类或标签功能\"></a>添加类或标签功能</h3><h4 id=\"创建分类\"><a href=\"#创建分类\" class=\"headerlink\" title=\"创建分类\"></a>创建分类</h4><p>进入博客所在文件夹，打开git bash，执行命令：</p>\n<p><code>hexo new page categories</code></p>\n<p>成功后会提示:</p>\n<p><code>INFO  Created: ~/Documents/blog/source/categories/index.md</code></p>\n<p>根据上面路径找到index.md，打开默认为这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2017-05-27 13:47:40</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>添加<code>type: &quot;categories&quot;</code>到内容中，添加后是这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2017-05-27 13:47:40</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>保存。</p>\n<p>打开需要添加分类的文章，为其添加categories属性。下方的<code>categories: web前端</code>表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: jQuery对表单的操作及更多应用</span><br><span class=\"line\">date: 2017-05-26 12:12:57</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- web前端</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p>\n<h4 id=\"创建标签\"><a href=\"#创建标签\" class=\"headerlink\" title=\"创建标签\"></a>创建标签</h4><p>操作基本相同。</p>\n<p>进入博客所在文件夹，打开git bash，执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p>成功后会提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">INFO  Created: ~&#x2F;Documents&#x2F;blog&#x2F;source&#x2F;tags&#x2F;index.md</span><br></pre></td></tr></table></figure>\n\n<p>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2017-05-27 14:22:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>添加<code>type: &quot;tags&quot;</code>到内容中，添加后是这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2017-05-27 13:47:40</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>保存。</p>\n<p>打开需要添加标签的文章，为其添加tags属性。下方的<code>tags:</code>下方的<code>- jQuery</code> <code>- 表格</code><br><code>- 表单验证</code>就是这篇文章的标签了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: jQuery对表单的操作及更多应用</span><br><span class=\"line\">date: 2017-05-26 12:12:57</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- web前端</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- jQuery</span><br><span class=\"line\">- 表格</span><br><span class=\"line\">- 表单验证</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><h4 id=\"安装相关插件\"><a href=\"#安装相关插件\" class=\"headerlink\" title=\"安装相关插件\"></a>安装相关插件</h4><p>在博客根目录下执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置博客\"><a href=\"#配置博客\" class=\"headerlink\" title=\"配置博客\"></a>配置博客</h4><p>安装完成，编辑博客配置文件：<code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>Next 主题自带搜索设置，编辑主题配置文件：<code>_config.yml</code></p>\n<p>找到文件中 Local search 的相关配置，设为 <code>true</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n\n<p>完成。</p>\n<h2 id=\"发表文章\"><a href=\"#发表文章\" class=\"headerlink\" title=\"发表文章\"></a>发表文章</h2><p>在博客所在文件夹打开git bash  输入：</p>\n<p><code>hexo new &quot;文章标题&quot;</code></p>\n<p>就能在source中的_post文件夹中看到该文章的md文件，然后利用markdown语法进行写入保存</p>\n<p>然后老三样并上传到github上</p>\n<h2 id=\"搭建过程中遇到的问题总结\"><a href=\"#搭建过程中遇到的问题总结\" class=\"headerlink\" title=\"搭建过程中遇到的问题总结\"></a>搭建过程中遇到的问题总结</h2><h3 id=\"1-OpenSSL-SSL-read-Connection-was-reset-errno-10054\"><a href=\"#1-OpenSSL-SSL-read-Connection-was-reset-errno-10054\" class=\"headerlink\" title=\"1.OpenSSL SSL_read: Connection was reset, errno 10054\"></a>1.OpenSSL SSL_read: Connection was reset, errno 10054</h3><p>删除原有ssh，换个新的ssh链接</p>\n<h3 id=\"2-搜索功能能搜索但不能跳转至相应文章\"><a href=\"#2-搜索功能能搜索但不能跳转至相应文章\" class=\"headerlink\" title=\"2.搜索功能能搜索但不能跳转至相应文章\"></a>2.搜索功能能搜索但不能跳转至相应文章</h3><p>这个可能是由于你的博客的透明度太透明导致，调一调侧栏的透明度就好</p>\n<h3 id=\"3-Timeout问题\"><a href=\"#3-Timeout问题\" class=\"headerlink\" title=\"3.Timeout问题\"></a>3.Timeout问题</h3><p>删除原有ssh，换个新的ssh链接</p>\n<h3 id=\"4-搜索功能一直转\"><a href=\"#4-搜索功能一直转\" class=\"headerlink\" title=\"4.搜索功能一直转\"></a>4.搜索功能一直转</h3><p>把博客配置文件中search的path由search.xml改为search.json</p>\n<h2 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h2><p>1.在进行上传到GitHub项目之前还是建议拿老三样去测试以下</p>\n<p>2.用vs code打开以上文件较好，查找可以用ctrl+F查找相关字段</p>\n<h2 id=\"成果展示\"><a href=\"#成果展示\" class=\"headerlink\" title=\"成果展示\"></a>成果展示</h2><p><img src=\"/.monster//Blog\\source_posts\\hexo-0\\final.jpg\" alt=\"final\"></p>\n<hr>\n<p>祝各位能创建好一个属于自己的Blog</p>\n<hr>\n","categories":["个人博客"]},{"title":"Algorithm","url":"/2021/04/18/Algorithm/","content":"","categories":["算法"]}]